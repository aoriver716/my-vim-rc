#!/bin/bash

destination=~/.vimrc

f_flag_passed='false'
b_flag_passed='false'
b_flag_argument=""
h_flag_passed='false'
invalid_flag_passed='false'

read_command_line_arguments() {
    while getopts 'fb:h' OPTION; do
        case "$OPTION" in
            f) f_flag_passed='true' ;;
            b)
                b_flag_passed='true'
                b_flag_argument="${OPTARG}"
                ;;
            h) h_flag_passed='true' ;;
            ?) invalid_flag_passed='true' ;;
        esac
    done
    shift "$(($OPTIND -1))"
}

backup_file_first='false'
backup_file_location=""
print_usage='false'
disable_overwrite_prompt='false'
arguments_valid='true'

process_command_line_arguments() {
    read_command_line_arguments "$@"

    if $f_flag_passed || $b_flag_passed; then
        disable_overwrite_prompt='true'
    fi

    if $h_flag_passed || $invalid_flag_passed; then
        print_usage='true'
    fi

    if $b_flag_passed; then
        backup_file_first='true'
        backup_file_location=$b_flag_argument
    fi

    if $invalid_flag_passed; then
        arguments_valid='false'
    fi
}

process_command_line_arguments "$@"

if $print_usage; then
    echo "USAGE: $(basename $0) [-f|-b BACKUP] [-h]"
    echo "  -f           Replace any existing .vimrc file."
    echo "  -b BACKUP  If a .vimrc file already exists, then rename/move it to BACKUP."

    if ! $arguments_valid; then
        exit 1
    else
        exit 0
    fi
fi

prompt_user_for_overwrite() {
    while :
    do
        read -e -p "$destination already exists. Would you like to overwrite it? [Y/n]" choice
        case $choice in
            [Yy]*) echo 0; return 0 ;;
            [Nn]*) echo 1; return 0 ;;
        esac
    done
}

if [ -f "$destination" ]; then
    if $backup_file_first; then
        cp "$destination" "$backup_file_location"
    fi

    if ! $disable_overwrite_prompt; then
        user_choice=$(prompt_user_for_overwrite)
        if [[ $user_choice -eq 1 ]]; then
            echo "Exiting..."
            exit 1
        else
            echo "Overwriting $destination..."
        fi
    fi
fi

echo "Copying vim configuration..."
cp ./my-vim-rc.vim "$destination"
exit $?
